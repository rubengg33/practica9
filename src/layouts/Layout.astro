---
import Header from "../components/Header.astro";

interface Props {
	title?: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title || "Astro Basics"}</title>
		<link rel="stylesheet" href="../styles/global.css" />
		<link
		rel="stylesheet"
		href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
	  />
		<script is:inline>
			function formatPrice(price) {
				const currency = localStorage.getItem('currency') || 'USD';
				const rates = {
					USD: 1,
					EUR: 0.85,
					GBP: 0.73
				};
				const symbols = {
					USD: '$',
					EUR: '€',
					GBP: '£'
				};
				const convertedPrice = price * rates[currency];
				return `${symbols[currency]}${convertedPrice.toFixed(2)}`;
			}

			function updatePrices() {
				const currency = localStorage.getItem('currency') || 'USD';
				document.querySelectorAll('.price-display').forEach(element => {
					const price = element.getAttribute('data-price');
					if (price) {
						element.textContent = formatPrice(parseFloat(price));
					}
				});
			}

			// Ejecutar inmediatamente
			window.addEventListener('load', updatePrices);
			
			// Actualizar cuando cambie la moneda
			window.addEventListener('storage', (e) => {
				if (e.key === 'currency') {
					updatePrices();
				}
			});

			// También actualizar en DOMContentLoaded
			document.addEventListener('DOMContentLoaded', updatePrices);
		</script>
	</head>
	<body>
		<Header />
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
