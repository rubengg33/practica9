---
import Layout from "../../layouts/Layout.astro";
import { getCourses } from "../../lib/courses";

// Definir las rutas dinámicas para la compilación estática
export async function getStaticPaths() {
  const courses = await getCourses();
  return courses.map(course => ({
    params: { slug: course.slug }
  }));
}

const { slug } = Astro.params;
const courses = await getCourses();
const course = courses.find(c => c.slug === slug);

if (!course) {
  throw new Error("Curso no encontrado");
}
---

<Layout>
  <main class="max-w-2xl mx-auto p-6 bg-white shadow-lg rounded-lg text-center">
    <!-- Imagen del curso (tamaño medio) -->
    <img
      src={course.imagen}
      alt={course.titulo}
      class="w-48 h-48 mx-auto rounded-md shadow-md object-cover"
    />

    <h1 class="text-3xl font-bold mt-4 text-gray-900">{course.titulo}</h1>
    <p class="text-gray-700 mt-2">{course.descripcion}</p>

    <h2 class="text-2xl font-semibold mt-6 text-gray-900">Temario</h2>
    <ul class="mt-4 text-left inline-block">
      {course.temario.values.map((item: { stringValue: string }) => (
        <li class="bg-gray-100 p-2 rounded-md shadow-sm my-1">
          {item.stringValue}
        </li>
      ))}
    </ul>

    <p class="mt-6 text-lg text-gray-800">
      <strong>Duración:</strong> {course.duracion}
    </p>

    <!-- Precio y botón alineados a la derecha -->
    <div class="flex justify-end items-center mt-4 space-x-2">
      <p class="price-display text-xl font-semibold text-blue-600" data-price={course.precio}>
        {course.precio}
      </p>
      <button class="p-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 flex items-center">
        <img src="../anadir-a-la-cesta.png" alt="Añadir" class="w-4 h-4" />
      </button>
    </div>
  </main>
</Layout>
